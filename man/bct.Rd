% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_bct.R
\name{bct}
\alias{bct}
\alias{dbct}
\alias{pbct}
\alias{qbct}
\alias{rbct}
\title{The Box-Cox t Distribution}
\usage{
dbct(x, mu, sigma, lambda, nu, log = FALSE)

pbct(q, mu, sigma, lambda, nu, lower.tail = TRUE)

qbct(p, mu, sigma, lambda, nu, lower.tail = TRUE)

rbct(n, mu, sigma, lambda, nu)
}
\arguments{
\item{x, q}{vector of positive quantiles.}

\item{mu}{vector of strictly positive scale parameters.}

\item{sigma}{vector of strictly positive relative dispersion parameters.}

\item{lambda}{vector of real-valued skewness parameters. If \code{lambda = 0}, the Box-Cox
t distribution reduces to the log-t distribution with parameters
\code{mu}, \code{sigma}, and \code{nu} (see \code{\link{lt}}).}

\item{nu}{strictly positive heavy-tailedness parameter.}

\item{log}{logical; if \code{TRUE}, probabilities \code{p} are given as \code{log(p)}.}

\item{lower.tail}{logical; if \code{TRUE} (default), probabilities are
\code{P[X <= x]}, otherwise, \code{P[X > x]}.}

\item{p}{vector of probabilities.}

\item{n}{number of random values to return.}
}
\value{
\code{dbct} returns the density, \code{pbct} gives the distribution function,
    \code{qbct} gives the quantile function, and \code{rbct} generates random observations.

    Invalid arguments will result in return value \code{NaN}, with an warning.

    The length of the result is determined by \code{n} for \code{rbct}, and is the
    maximum of the lengths of the numerical arguments for the other functions.
}
\description{
Density, distribution function, quantile function, and random
    generation for the Box-Cox t distribution with parameters \code{mu},
    \code{sigma}, \code{lambda}, and \code{nu}.
}
\examples{
mu <- 8
sigma <- 1
lambda <- 2
nu <- 4

# Sample generation
x <- rbct(10000, mu, sigma, lambda, nu)

# Density
hist(x, prob = TRUE, main = "The Box-Cox t Distribution", col = "white")
curve(dbct(x, mu, sigma, lambda, nu), add = TRUE, col = 2, lwd = 2)
legend("topleft", "Probability density function", col = 2, lwd = 2, lty = 1)

# Distribution function
plot(ecdf(x), main = "The Box-Cox t Distribution", ylab = "Distribution function")
curve(pbct(x, mu, sigma, lambda, nu), add = TRUE, col = 2, lwd = 2)
legend("topleft", c("Emp. distribution function", "Theo. distribution function"),
  col = c(1, 2), lwd = 2, lty = c(1, 1)
)

# Quantile function
plot(seq(0.01, 0.99, 0.001), quantile(x, seq(0.01, 0.99, 0.001)),
  type = "l",
  xlab = "p", ylab = "Quantile function", main = "The Box-Cox t Distribution"
)
curve(qbct(x, mu, sigma, lambda, nu), add = TRUE, col = 2, lwd = 2, from = 0, to = 1)
legend("topleft", c("Emp. quantile function", "Theo. quantile function"),
  col = c(1, 2), lwd = 2, lty = c(1, 1)
)
}
\references{
Rigby, R. A., Stasinopoulos, D.M. (2006). Using the Box-Cox t
    distribution in GAMLSS to model skewness and kurtosis. \emph{Statistical Model}, 6, 209-229

Vanegas, L. H., and Paula, G. A. (2016). Log-symmetric distributions: statistical
    properties and parameter estimation. \emph{Brazilian Journal of Probability and Statistics}, 30, 196-220.

Ferrari, S. L. P., and Fumes, G. (2017). Box-Cox symmetric distributions and
    applications to nutritional data. \emph{AStA Advances in Statistical Analysis}, 101, 321-344.
}
\author{
Rodrigo M. R. de Medeiros <\email{rodrigo.matheus@live.com}>
}
